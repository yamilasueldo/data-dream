<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="/css/styles_admin.css" />
  <title><%= titulo || 'Registro - DATA DREAM' %></title>
  <link rel="icon" type="image/png" href="/favicon.png">
</head>
<body>
  <!-- Bot√≥n de regreso -->
  <a href="/admin/login" class="back-button">
    <span class="back-arrow">‚Üê</span>
    <span class="back-text">Volver</span>
  </a>

  <main>
    <div class="container">
      <div class="card">
        <!-- Logo y t√≠tulo -->
        <div style="text-align: center; margin-bottom: 2rem;">
          <img src="/favicon.png" alt="DATA DREAM Logo" style="width: 60px; height: 60px; margin-bottom: 1rem; border-radius: 8px;">
          <h3>DATA DREAM</h3>
          <p style="color: #6c757d; margin: 0.5rem 0;">Crear Cuenta de Administrador</p>
          <small style="color: #999;">Yamila Sueldo</small>
        </div>
        
        <!-- Contenedor para mensajes -->
        <div id="messages">
          <% if (typeof error !== 'undefined' && error) { %>
            <div class="alert alert-error">
              <span>‚ùå</span>
              <p><%= error %></p>
            </div>
          <% } %>
          
          <% if (typeof success !== 'undefined' && success) { %>
            <div class="alert alert-success">
              <span>‚úÖ</span>
              <p><%= success %></p>
            </div>
          <% } %>

          <% if (typeof errors !== 'undefined' && errors.length > 0) { %>
            <div class="alert alert-error">
              <span>‚ö†Ô∏è</span>
              <div>
                <% errors.forEach(error => { %>
                  <p style="margin: 0.2rem 0;"><%= error.msg %></p>
                <% }); %>
              </div>
            </div>
          <% } %>
        </div>
        
        <form action="/admin/auth/registro" method="POST" id="registerForm">
          
          <!-- Nombre y Apellido -->
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
            <div class="input-group">
              <input type="text" id="nombre" name="nombre" placeholder=" " 
                     value="<%= typeof formData !== 'undefined' ? formData.nombre || '' : '' %>"
                     required maxlength="50" />
              <label for="nombre">Nombre</label>
            </div>

            <div class="input-group">
              <input type="text" id="apellido" name="apellido" placeholder=" " 
                     value="<%= typeof formData !== 'undefined' ? formData.apellido || '' : '' %>"
                     required maxlength="50" />
              <label for="apellido">Apellido</label>
            </div>
          </div>

          <div class="input-group">
            <input type="email" id="email" name="email" placeholder=" " 
                   value="<%= typeof formData !== 'undefined' ? formData.email || '' : '' %>"
                   required />
            <label for="email">Correo electr√≥nico</label>
          </div>

          <div class="input-group">
            <input type="password" id="password" name="password" placeholder=" " required minlength="6" />
            <label for="password">Contrase√±a</label>
            <small style="color: #6c757d; font-size: 0.8rem; margin-top: 0.5rem; display: block;">
              M√≠nimo 6 caracteres, debe incluir may√∫scula, min√∫scula y n√∫mero
            </small>
            <div id="passwordStrength" style="margin-top: 0.5rem;"></div>
          </div>

          <div class="input-group">
            <input type="password" id="confirmPassword" name="confirmPassword" placeholder=" " required />
            <label for="confirmPassword">Confirmar contrase√±a</label>
            <small id="passwordMatch" style="font-size: 0.8rem; margin-top: 0.5rem; display: block;"></small>
          </div>

          <!-- T√©rminos y condiciones -->
          <div style="margin: 1rem 0;">
            <label style="display: flex; align-items: center; gap: 0.5rem; color: #555; font-size: 0.9rem; cursor: pointer;">
              <input type="checkbox" id="terms" name="terms" required 
                     style="accent-color: #007bff; transform: scale(1.2);">
              Acepto los t√©rminos y condiciones de uso
            </label>
          </div>

          <button type="submit" class="btn-submit" id="btnRegister" disabled>
            <span id="registerText">Registrarse</span>
            <span id="registerSpinner" style="display: none;">üîÑ Creando cuenta...</span>
          </button>

          <div class="login-link">
            <small>¬øYa tienes cuenta? <a href="/admin/login">Inicia sesi√≥n aqu√≠</a></small>
          </div>
        </form>
      </div>
    </div>
  </main>

  <footer>
    <p>&copy; 2025 DATA DREAM - Yamila Sueldo - Todos los derechos reservados.</p>
  </footer>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const registerForm = document.getElementById('registerForm');
      const btnRegister = document.getElementById('btnRegister');
      const registerText = document.getElementById('registerText');
      const registerSpinner = document.getElementById('registerSpinner');
      const passwordInput = document.getElementById('password');
      const confirmPasswordInput = document.getElementById('confirmPassword');
      const passwordStrength = document.getElementById('passwordStrength');
      const passwordMatch = document.getElementById('passwordMatch');
      const termsCheckbox = document.getElementById('terms');

      // Validaci√≥n de fortaleza de contrase√±a
      passwordInput.addEventListener('input', function() {
        const password = this.value;
        const strength = checkPasswordStrength(password);
        
        passwordStrength.innerHTML = `
          <div style="display: flex; gap: 2px; margin-bottom: 0.5rem;">
            ${Array(4).fill(0).map((_, i) => 
              `<div style="height: 4px; flex: 1; background: ${i < strength.score ? strength.color : '#e9ecef'}; border-radius: 2px;"></div>`
            ).join('')}
          </div>
          <small style="color: ${strength.color}; font-weight: 500;">${strength.text}</small>
        `;
        
        checkFormValidity();
      });

      // Validaci√≥n de confirmaci√≥n de contrase√±a
      confirmPasswordInput.addEventListener('input', function() {
        const password = passwordInput.value;
        const confirmPassword = this.value;
        
        if (confirmPassword === '') {
          passwordMatch.textContent = '';
          passwordMatch.style.color = '';
        } else if (password === confirmPassword) {
          passwordMatch.textContent = '‚úì Las contrase√±as coinciden';
          passwordMatch.style.color = '#28a745';
        } else {
          passwordMatch.textContent = '‚úó Las contrase√±as no coinciden';
          passwordMatch.style.color = '#dc3545';
        }
        
        checkFormValidity();
      });

      // Validaci√≥n de t√©rminos
      termsCheckbox.addEventListener('change', checkFormValidity);

      // Funci√≥n para verificar fortaleza de contrase√±a
      function checkPasswordStrength(password) {
        let score = 0;
        let text = 'Muy d√©bil';
        let color = '#dc3545';

        if (password.length >= 6) score++;
        if (password.match(/[a-z]/)) score++;
        if (password.match(/[A-Z]/)) score++;
        if (password.match(/[0-9]/)) score++;

        switch (score) {
          case 1:
            text = 'D√©bil';
            color = '#fd7e14';
            break;
          case 2:
            text = 'Regular';
            color = '#ffc107';
            break;
          case 3:
            text = 'Buena';
            color = '#20c997';
            break;
          case 4:
            text = 'Excelente';
            color = '#28a745';
            break;
        }

        return { score, text, color };
      }

      // Funci√≥n para verificar validez del formulario
      function checkFormValidity() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        const strength = checkPasswordStrength(password);
        const passwordsMatch = password === confirmPassword && password !== '';
        const termsAccepted = termsCheckbox.checked;
        
        const isValid = strength.score >= 2 && passwordsMatch && termsAccepted;
        
        btnRegister.disabled = !isValid;
        btnRegister.style.opacity = isValid ? '1' : '0.6';
        btnRegister.style.cursor = isValid ? 'pointer' : 'not-allowed';
      }

      // Manejo del env√≠o del formulario
      registerForm.addEventListener('submit', function(e) {
        if (!btnRegister.disabled) {
          btnRegister.disabled = true;
          registerText.style.display = 'none';
          registerSpinner.style.display = 'inline';
        }
      });

      // Auto-ocultar mensajes despu√©s de 5 segundos
      const alerts = document.querySelectorAll('.alert');
      alerts.forEach(alert => {
        setTimeout(() => {
          alert.style.opacity = '0';
          alert.style.transform = 'translateY(-10px)';
          setTimeout(() => alert.remove(), 300);
        }, 5000);
      });

      // Inicializar validaci√≥n
      checkFormValidity();
    });
  </script>

  <style>
    /* Estilos espec√≠ficos para el registro */
    main {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 40px 20px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .container {
      width: 100%;
      max-width: 500px;
    }

    .card {
      background: white;
      padding: 40px;
      border-radius: 20px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .alert {
      padding: 12px;
      margin-bottom: 20px;
      border-radius: 8px;
      display: flex;
      align-items: flex-start;
      gap: 10px;
    }

    .alert-error {
      background: #fee;
      color: #c33;
      border: 1px solid #fcc;
    }

    .alert-success {
      background: #efe;
      color: #363;
      border: 1px solid #cfc;
    }

    .input-group {
      position: relative;
      margin-bottom: 25px;
    }

    .input-group input {
      width: 100%;
      padding: 15px 20px;
      border: 2px solid #e1e1e1;
      border-radius: 12px;
      font-size: 16px;
      transition: all 0.3s ease;
      background: #fff;
      box-sizing: border-box;
    }

    .input-group input:focus {
      border-color: #007bff;
      outline: none;
    }

    .input-group label {
      position: absolute;
      left: 20px;
      top: 15px;
      color: #999;
      font-size: 16px;
      transition: all 0.3s ease;
      pointer-events: none;
    }

    .input-group input:focus + label,
    .input-group input:not(:placeholder-shown) + label {
      top: -10px;
      left: 15px;
      font-size: 12px;
      color: #007bff;
      background: white;
      padding: 0 5px;
    }

    .btn-submit {
      width: 100%;
      padding: 15px;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 12px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 20px;
    }

    .btn-submit:hover:not(:disabled) {
      background: #0056b3;
    }

    .btn-submit:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    .login-link {
      text-align: center;
      margin-top: 20px;
    }

    .login-link a {
      color: #007bff;
      text-decoration: none;
    }

    .login-link a:hover {
      text-decoration: underline;
    }

    footer {
      background: rgba(0,0,0,0.1);
      color: white;
      padding: 20px;
      text-align: center;
      font-size: 14px;
    }

    .back-button {
      position: fixed;
      top: 20px;
      left: 20px;
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 12px 20px;
      background: rgba(255,255,255,0.9);
      border: 2px solid #007bff;
      border-radius: 25px;
      text-decoration: none;
      color: #007bff;
      font-weight: 500;
      font-size: 14px;
      backdrop-filter: blur(10px);
      transition: all 0.3s ease;
      z-index: 1000;
    }

    .back-button:hover {
      background: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(0,123,255,0.3);
      color: #007bff;
      text-decoration: none;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .card {
        padding: 30px 20px;
        margin: 20px;
      }

      .back-button {
        position: static;
        margin: 20px auto;
        width: fit-content;
        display: flex;
      }

      main {
        padding: 20px 10px;
      }
    }

    @media (max-width: 480px) {
      .card {
        padding: 20px 15px;
      }

      .input-group input {
        padding: 12px 15px;
      }
    }